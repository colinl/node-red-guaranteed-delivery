[{"id":"085c8505c5c7f787","type":"group","z":"7e7868d06b3db971","name":"Guaranteed publishing to MQTT","style":{"label":true},"nodes":["902c695313424be1","509341d9f4f203ad","027763e5950cb261","7fec752ee4fb89cf","dcb41561784ec328","fb1932c55324d8ee","b0e5b82888c01f09","651ee15dd1108f8b","f20183ec47b5f027","7be6ea0473e40334","c307f64408c672ec","25cad3038e797fe5","24b585f28c73bb09"],"x":34,"y":619,"w":1172,"h":262},{"id":"902c695313424be1","type":"link out","z":"7e7868d06b3db971","g":"085c8505c5c7f787","name":"","links":["509341d9f4f203ad"],"x":1165,"y":800,"wires":[]},{"id":"509341d9f4f203ad","type":"link in","z":"7e7868d06b3db971","g":"085c8505c5c7f787","name":"","links":["902c695313424be1"],"x":115,"y":760,"wires":[["c307f64408c672ec"]]},{"id":"027763e5950cb261","type":"comment","z":"7e7868d06b3db971","g":"085c8505c5c7f787","name":"Send MQTT messages to this link","info":"","x":190,"y":660,"wires":[]},{"id":"7fec752ee4fb89cf","type":"mqtt out","z":"7e7868d06b3db971","g":"085c8505c5c7f787","name":"","topic":"","qos":"1","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"e1f7765d217427f2","x":690,"y":700,"wires":[]},{"id":"dcb41561784ec328","type":"complete","z":"7e7868d06b3db971","g":"085c8505c5c7f787","name":"MQTT Complete","scope":["7fec752ee4fb89cf"],"uncaught":false,"x":140,"y":840,"wires":[["b0e5b82888c01f09"]]},{"id":"fb1932c55324d8ee","type":"join","z":"7e7868d06b3db971","g":"085c8505c5c7f787","name":"Join with key","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"key","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"1","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":700,"y":820,"wires":[["f20183ec47b5f027"]]},{"id":"b0e5b82888c01f09","type":"change","z":"7e7868d06b3db971","g":"085c8505c5c7f787","name":"key: completed, save topic and payload","rules":[{"t":"set","p":"key","pt":"msg","to":"completed","tot":"str"},{"t":"move","p":"payload","pt":"msg","to":"payload.data","tot":"msg"},{"t":"set","p":"payload.topic","pt":"msg","to":"topic","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":420,"y":840,"wires":[["fb1932c55324d8ee"]]},{"id":"651ee15dd1108f8b","type":"change","z":"7e7868d06b3db971","g":"085c8505c5c7f787","name":"key: sending, save topic and payload","rules":[{"t":"set","p":"key","pt":"msg","to":"sending","tot":"str"},{"t":"move","p":"payload","pt":"msg","to":"payload.data","tot":"msg"},{"t":"set","p":"payload.topic","pt":"msg","to":"topic","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":410,"y":800,"wires":[["fb1932c55324d8ee"]]},{"id":"f20183ec47b5f027","type":"function","z":"7e7868d06b3db971","g":"085c8505c5c7f787","name":"Check if messages match - OK or FAIL","func":"/** Check that the message that is has been sent (completed) is the one that has just been passed to the MQTT node (sending)\n * payload.sending contains last msg sent to MQTT node\n * payload.completed contains msg indicated completed by MQTT node\n * in each case the payload contains topic of message and payload value in data\n */ \nconst previousKey = context.get(\"previousKey\") || \"\"\nconst thisKey = msg.key\n\n//node.warn(typeof msg.payload.sending.data)\nif (thisKey === \"completed\"  &&  previousKey === \"sending\") {\n    let equal = false           // whether messages are equivalent\n    // topics must be the same\n    if (msg.payload.sending.topic === msg.payload.completed.topic) {\n        if (typeof msg.payload.sending.data === \"string\") {\n            equal = compareDirect(msg.payload.sending.data, msg.payload.completed.data)\n        } else if (Buffer.isBuffer(msg.payload.sending.data)) {\n            equal = compareBuffers(msg.payload.sending.data, msg.payload.completed.data)\n        } else {\n            equal = compareJSON(msg.payload.sending.data, msg.payload.completed.data)\n        }\n    }\n    if (equal) {\n        msg.control = \"OK\"\n    } else {\n        msg.control = \"FAIL\"\n    }\n} else {\n    // out of sequence so ignore\n    msg = null\n}\ncontext.set(\"previousKey\", thisKey)\nreturn msg;\n\nfunction compareJSON(sending, completed) {\n    // compares JSON version of payload sent with that from the Complete node\n    return completed === JSON.stringify(sending)\n}\n\nfunction compareDirect(sending, completed) {\n    // directly compares payload sent with that from the Complete node\n    return completed === sending \n}\n\nfunction compareBuffers(sending, completed) {\n    // compares buffer payload sent with that from the Complete node\n    let answer = false\n    // check completed is also a buffer\n    if (Buffer.isBuffer(completed)) {\n        answer = Buffer.compare(sending, completed) === 0\n    }\n    return answer \n}","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":970,"y":820,"wires":[["902c695313424be1"]],"info":"// nrlint function-eslint:off\n"},{"id":"7be6ea0473e40334","type":"link in","z":"7e7868d06b3db971","g":"085c8505c5c7f787","name":"Send to MQTT","links":["5106df9ead6196ac"],"x":140,"y":700,"wires":[["c307f64408c672ec"]],"l":true},{"id":"c307f64408c672ec","type":"junction","z":"7e7868d06b3db971","g":"085c8505c5c7f787","x":260,"y":700,"wires":[["24b585f28c73bb09"]]},{"id":"25cad3038e797fe5","type":"junction","z":"7e7868d06b3db971","g":"085c8505c5c7f787","x":580,"y":700,"wires":[["7fec752ee4fb89cf","651ee15dd1108f8b"]]},{"id":"24b585f28c73bb09","type":"guaranteed-delivery","z":"7e7868d06b3db971","g":"085c8505c5c7f787","name":"","controlProperty":"control","OKValue":"OK","FAILValue":"FAIL","retrySecs":60,"timeout":5,"maxQueue":100,"contextStore":"default","x":420,"y":700,"wires":[["25cad3038e797fe5"]]},{"id":"e1f7765d217427f2","type":"mqtt-broker","name":"Localhost","broker":"localhost","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""}]
